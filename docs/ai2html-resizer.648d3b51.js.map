{"version":3,"sources":["scripts/vendor/ai2html-resizer.js"],"names":["throttle","func","wait","context","args","result","_now","timeout","previous","later","document","documentElement","className","indexOf","addEventListener","resizer","window","Date","now","getTime","apply","remaining","arguments","clearTimeout","setTimeout","elements","Array","prototype","slice","call","querySelectorAll","widthById","forEach","el","parent","parentNode","width","id","getBoundingClientRect","minwidth","getAttribute","maxwidth","style","display","$","trigger","require","AppCommunicator","triggerResize","e","console","log"],"mappings":";CAAC,WA+CUA,IAASC,EAAMC,EAOlBC,EACAC,EACAC,EAPAC,EAQAC,EACAC,EACAC,EAzDFC,SAASC,gBAAgBC,UAAUC,QAAQ,sBAAwB,IAEvEH,SAASC,gBAAgBC,WAAa,qBAEhC,kBAAmBF,WAqCzBA,SAASI,iBAAiB,mBAAoBC,GAE9CC,OAAOF,iBAAiB,UAENb,EAFyBc,EAEnBb,EAF4B,IAI9CI,EACFW,KAAKC,KACL,WACS,OAAA,IAAID,MAAOE,WAKlBZ,EAAU,KACVC,EAAW,EACXC,EAAQ,WACVD,EAAWF,IACXC,EAAU,KACVF,EAASJ,EAAKmB,MAAMjB,EAASC,GACxBG,IAASJ,EAAUC,EAAO,OAE1B,WACDc,IAAAA,EAAMZ,IACNe,EAAYnB,GAAQgB,EAAMV,GAcvBH,OAbPF,EAAU,KACVC,EAAOkB,UACHD,GAAa,GAAKA,EAAYnB,GAC5BK,IACFgB,aAAahB,GACbA,EAAU,MAEZC,EAAWU,EACXb,EAASJ,EAAKmB,MAAMjB,EAASC,GACxBG,IAASJ,EAAUC,EAAO,OACrBG,IACVA,EAAUiB,WAAWf,EAAOY,IAEvBhB,OA1EFU,SAAAA,IACHU,IAAAA,EAAWC,MAAMC,UAAUC,MAAMC,KACnCnB,SAASoB,iBAAiB,gCAExBC,EAAY,GAChBN,EAASO,QAAQ,SAASC,GACpBC,IAAAA,EAASD,EAAGE,WACZC,EAAQL,EAAUG,EAAOG,KAAOH,EAAOI,wBAAwBF,MAC/DG,EAAWN,EAAGO,aAAa,kBAC3BC,EAAWR,EAAGO,aAAa,kBAC/BT,EAAUG,EAAOG,IAAMD,EAGrBH,EAAGS,MAAMC,SADNJ,GAAYH,KAAWK,GAAYL,GAAsB,OAAbK,GAC5B,QAEA,SAGnB,IACEzB,OAAOkB,QAAUlB,OAAOkB,OAAOU,GACjC5B,OAAOkB,OAAOU,EAAE,QAAQC,QAAQ,iBAAkB,CAAC7B,SAEjDA,OAAO8B,SACTA,QAAQ,CAAC,mBAAoB,WAC3BA,QAAQ,CAAC,iDAAkD,SACzDC,GAEAA,EAAgBC,oBAItB,MAAOC,GACPC,QAAQC,IAAIF,KAvCjB","file":"ai2html-resizer.648d3b51.js","sourceRoot":"../src","sourcesContent":[";(function() {\n  // only want one resizer on the page\n  if (document.documentElement.className.indexOf('g-resizer-v3-init') > -1)\n    return\n  document.documentElement.className += ' g-resizer-v3-init'\n  // require IE9+\n  if (!('querySelector' in document)) return\n  function resizer() {\n    var elements = Array.prototype.slice.call(\n      document.querySelectorAll('.g-artboard[data-min-width]')\n    )\n    var widthById = {}\n    elements.forEach(function(el) {\n      var parent = el.parentNode\n      var width = widthById[parent.id] || parent.getBoundingClientRect().width\n      var minwidth = el.getAttribute('data-min-width')\n      var maxwidth = el.getAttribute('data-max-width')\n      widthById[parent.id] = width\n\n      if (+minwidth <= width && (+maxwidth >= width || maxwidth === null)) {\n        el.style.display = 'block'\n      } else {\n        el.style.display = 'none'\n      }\n    })\n    try {\n      if (window.parent && window.parent.$) {\n        window.parent.$('body').trigger('resizedcontent', [window])\n      }\n      if (window.require) {\n        require(['foundation/main'], function() {\n          require(['shared/interactive/instances/app-communicator'], function(\n            AppCommunicator\n          ) {\n            AppCommunicator.triggerResize()\n          })\n        })\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', resizer)\n  // feel free to replace throttle with _.throttle, if available\n  window.addEventListener('resize', throttle(resizer, 200))\n\n  function throttle(func, wait) {\n    // from underscore.js\n    var _now =\n      Date.now ||\n      function() {\n        return new Date().getTime()\n      }\n    var context\n    var args\n    var result\n    var timeout = null\n    var previous = 0\n    var later = function() {\n      previous = _now()\n      timeout = null\n      result = func.apply(context, args)\n      if (!timeout) context = args = null\n    }\n    return function() {\n      var now = _now()\n      var remaining = wait - (now - previous)\n      context = this\n      args = arguments\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout)\n          timeout = null\n        }\n        previous = now\n        result = func.apply(context, args)\n        if (!timeout) context = args = null\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining)\n      }\n      return result\n    }\n  }\n})()\n"]}